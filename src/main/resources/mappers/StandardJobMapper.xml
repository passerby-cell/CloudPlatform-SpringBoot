<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloudplatform.dao.StandardJobMapper">
  <resultMap id="BaseResultMap" type="com.cloudplatform.pojo.StandardJob">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="jobname" jdbcType="VARCHAR" property="jobname" />
    <result column="starttime" jdbcType="TIMESTAMP" property="starttime" />
    <result column="stoptime" jdbcType="TIMESTAMP" property="stoptime" />
    <result column="workcount" jdbcType="INTEGER" property="workcount" />
    <result column="workdonecount" jdbcType="INTEGER" property="workdonecount" />
    <result column="workinlinecount" jdbcType="INTEGER" property="workinlinecount" />
    <result column="cpucount" jdbcType="VARCHAR" property="cpucount" />
    <result column="memcount" jdbcType="VARCHAR" property="memcount" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from standardjob
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.cloudplatform.pojo.StandardJob">
    insert into standardjob (id, jobname, starttime, 
      stoptime, workcount, workdonecount, 
      workinlinecount, cpucount, memcount, 
      status)
    values (#{id,jdbcType=VARCHAR}, #{jobname,jdbcType=VARCHAR}, #{starttime,jdbcType=TIMESTAMP}, 
      #{stoptime,jdbcType=TIMESTAMP}, #{workcount,jdbcType=INTEGER}, #{workdonecount,jdbcType=INTEGER}, 
      #{workinlinecount,jdbcType=INTEGER}, #{cpucount,jdbcType=VARCHAR}, #{memcount,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.cloudplatform.pojo.StandardJob">
    update standardjob
    set jobname = #{jobname,jdbcType=VARCHAR},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      stoptime = #{stoptime,jdbcType=TIMESTAMP},
      workcount = #{workcount,jdbcType=INTEGER},
      workdonecount = #{workdonecount,jdbcType=INTEGER},
      workinlinecount = #{workinlinecount,jdbcType=INTEGER},
      cpucount = #{cpucount,jdbcType=VARCHAR},
      memcount = #{memcount,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, jobname, starttime, stoptime, workcount, workdonecount, workinlinecount, 
    cpucount, memcount, status
    from standardjob
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, jobname, starttime, stoptime, workcount, workdonecount, workinlinecount, 
    cpucount, memcount, status
    from standardjob
  </select>
</mapper>